version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: medical-appointments-api
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
      - "9229:9229"
    environment:
      - NODE_ENV=development
      - AWS_ACCESS_KEY_ID=localstack
      - AWS_SECRET_ACCESS_KEY=localstack
      - AWS_DEFAULT_REGION=us-east-1
      - LAMBDA_ENDPOINT=http://localstack:4566
      - AWS_ENDPOINT=http://localstack:4566
      - SERVICES=serverless
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - app-network
    command: npm run start:dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566-4599:4566-4599"
    environment:
      - SERVICES=lambda,apigateway,dynamodb,cloudformation,s3,sqs
      - DEBUG=1
      - DATA_DIR=/tmp/localstack_data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_REMOTE_DOCKER=false
      - DEFAULT_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=localstack
      - AWS_SECRET_ACCESS_KEY=localstack
      - LAMBDA_RUNTIME_ENVIRONMENT_TIMEOUT=90
      - LAMBDA_DOCKER_FLAGS=-m 512M
      - HOSTNAME_EXTERNAL=localstack
    volumes:
      - localstack_data:/tmp/localstack_data
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    container_name: dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=localstack
      - AWS_SECRET_ACCESS_KEY=localstack
    depends_on:
      - localstack
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  localstack_data: